component EmailInput(value: string) {
  <div id="1" foo bar={2} baz={baz}>Hello</div>
}

// User defined types are supported! Record types
// are all exact by default.
type SummaryItem = {
  url: string,
  title: string,
  comment_count: string,
  user: string,
  time_ago: number,
}

// You can define multiple components in a single file if you'd like.
// They are private by default but can be made public by
// using the export keyword.
component Summary(i: number, offset: number, item: SummaryItem) {
  // Variables defined inside a component are considered computed values.
  // It is statically determined that this value is dependant on i and offset.
  let itemNumber = i + offset + 1
  // Blocks are expressions which evaluate to the last value in the block.
  // They are also considered computed values.
  let comment_text = {
    let i = item.comment_count;
    i === 1 ? 'comment' : 'comments'
  }
  // In this case Summary evalutes to this JSX expression
  <article>
  	<span>{itemNumber}</span>
  	<h2><a target='_blank' href={item.url}>{item.title}</a></h2>
  	<p class='meta'>
      <a href="#/item/{item.id}">{comment_text}</a>
      by {item.user} {item.time_ago}</p>
  </article>
  (function() {

  })()
}



// fahrenheit = +(32 + (9 / 5 * celsius))
// celsius = +(5 / 9 * (fahrenheit - 32))
component TemperatureConverter {
  // Mutually computed state values. They both update when the other updates.
  state celsius = 0;
  state fahrenheit = 0;
  <>
    <input value={celsius} type='number'> °c =
    <input value={fahrenheit} type='number'> °f
  </>
}

component Counter {
  // This will be typed as StateCell<number> implicitly. A StateCell
  // has special methods like `set` that allow you to update it as if it was
  // an object.
  state count : number = 0;
    <div>
      <input type="number" value={count}>
      <button onclick={count.set(count + 1)}>count</button>
    </div>
  {/* (function() {
    var ce = document.createElement.bind(document);
    var _input_number = ce('input');
    _input_number.value = 0;
    _input_number.setAttribute('type', 'number');
    var _button = ce('button');
    _button.addEventListener('click', function() {
      _input_number.value = parseInt(_input_number.value) + 1
    })
    _button.innerText = 'count';
    document.body.appendChild(_input_number)
    document.body.appendChild(_button)
  })() */}
}
